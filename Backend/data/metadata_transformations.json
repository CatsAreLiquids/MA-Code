[{"sum": "The function sum calculates the sum of specified columns in a DataFrame, optionally grouping the data by one or more columns. It takes a filter dictionary to determine which columns to sum and how to group the data."}, {"mean": "The function mean calculates the average values of specified columns in a DataFrame, optionally grouping the data by one or more columns. It takes a filter dictionary to determine which columns to group by and which columns to compute the mean for."},
  {"max": "The function max aims to retrieve the maximum value from specified columns in a DataFrame, optionally returning a defined number of rows with the highest values. It can handle both single-column and multi-column scenarios, providing either the maximum value or the rows containing the maximum values based on the provided filters."},
  {"min": "The function min aims to retrieve the minimum values from specified columns in a DataFrame, returning either a specified number of rows with the smallest values or a single value along with its corresponding index. It allows for flexible filtering based on the provided parameters in the filter dictionary."},
  {"filter": "The function filter is designed to apply specified filtering conditions to a DataFrame, allowing users to refine their data based on various criteria such as location, year range, or specific values in designated columns. It processes a dictionary of conditions to return a filtered version of the DataFrame that meets the defined criteria."},
  {"sortby": "The function sortby aims to sort a given DataFrame or Series based on a specified column and order (ascending or descending) as defined in the filter_dict. It processes the filter_dict to determine the sorting criteria and applies the sorting operation accordingly."}, {"count": "The function count aims to count occurrences of a specified value within a designated column of a DataFrame, with the option to count only distinct values and to group the results by another column if specified. It processes a filter dictionary to determine the column and value for counting, returning a DataFrame with the counts."},
  {"returnResult": "The function returnResult aims to receive data from an API request and return it in a structured format. It processes the incoming data and encapsulates it within a dictionary before sending it back to the requester."},
  {"retrieve": "The function retrieve aims to fetch data from a specified product URL and return it as a DataFrame or Series, depending on the structure of the data received. It also allows for optional filtering of specific columns from the retrieved data."}, {"combine": "The function combineProducts aims to merge two data products based on specified matching columns and a condition (equal or unequal). It processes the data to either join or filter the first product according to the criteria defined in the filter_dict."}]